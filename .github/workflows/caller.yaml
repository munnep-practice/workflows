name: caller workflow

on: 
  push




jobs:
  called_workflow:
    # uses: octo-org/example-repo/.github/workflows/reusable-workflow.yml@main
    uses: ./.github/workflows/called.yaml
    with:
      test: "hello patrick"


  called_workflow_2:
    uses: munnep-practice/workflows/.github/workflows/called.yaml@main
    # uses: ./.github/workflows/called.yaml
    with:
      test: "hello patrick"      

   
  job1:
    runs-on: ubuntu-latest
    
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    
    steps:
    - run: echo Today is ${{ env.DAY_OF_WEEK }} or $DAY_OF_WEEK
      name: just say something
      env: 
        DAY_OF_WEEK: Monday

    
    - id: step1
      run: echo "test=hello" >> "$GITHUB_OUTPUT"
    
    - id: step2
      run: echo "test=world" >> "$GITHUB_OUTPUT"

    - id: step3
      run: echo "test3=WORKING WITH GITHUB_ENV" >> "$GITHUB_ENV"
      
    - id: step4
      run: echo $test3  

  job2:
   runs-on: ubuntu-latest
   needs: job1
   
   steps:
    - env:
        OUTPUT1: ${{needs.job1.outputs.output1}}
        OUTPUT2: ${{needs.job1.outputs.output2}}
  
      run: echo "$OUTPUT1 $OUTPUT2"      

    - id: output_directly
      run: echo  "test3=WORKING WITH GITHUB_OUTPUT" >> "$GITHUB_OUTPUT"

    - name: context output1
      run: echo ${{ needs.job1.outputs }} | jq

    - name: context output2
      run: echo ${{ steps.output_directly.outputs }} | jq